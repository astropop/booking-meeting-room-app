import Head from "next/head";
import { useEffect, useState } from "react";
import Image from "next/image";
// import studySpacesArr from "./_components/studySpacesType";
import { StudySpace } from "./_components/StudySpace";
import styles from "./page.module.css";

type imagenew = {
  src: string;
  fallback: string;
  alt: string;
};

function OptimizedImageWithFallback({
  src,
  alt,
  fallback = "/No-Image.png",
}: imagenew) {
  const [imageError, setImageError] = useState(false);
  return (
    <Image
      src={imageError ? fallback : src}
      alt={alt}
      width={512}
      height={911}
      style={{ width: "30%", height: "auto" }}
      onError={() => setImageError(true)}
    ></Image>
  );
}
async function getData(): Promise<StudySpace[]> {
  const request = await fetch(
    "https://raw.githubusercontent.com/astropop/MySearchSim/refs/heads/master/data.json",
    {
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
    }
  );
  const data = await request.json();
  return data;
}

// const BookableStudySpaces = async () => {
//   const data = await getData();

//   data.map((item) => {
//     return (
//       <li key={item.name}>
//         <table
//           style={{ width: "100%", height: "auto", border: "1px solid black" }}
//         >
//           <tbody>
//             <tr>
//               <td style={{ width: "5%" }}>{item.name}</td>
//               <td style={{ width: "10%" }}>
//                 <a href={item.url} target='_blank'>
//                   Click here
//                 </a>
//               </td>
//               <td style={{ width: "75%" }}>
//                 <OptimizedImageWithFallback
//                   alt={item.name}
//                   fallback={"/No-Image.png"}
//                   src={item.image_front ?? ""}
//                 ></OptimizedImageWithFallback>
//                 <OptimizedImageWithFallback
//                   alt={item.name}
//                   fallback={"/No-Image.png"}
//                   src={item.image_overview ?? ""}
//                 ></OptimizedImageWithFallback>
//               </td>
//               <td style={{ width: "10%" }}>Note</td>
//             </tr>
//           </tbody>
//         </table>
//       </li>
//     );
//   });
//   return data;
// };
// only works in app folder
// export const metadata: Metadata = {
//   title: "Meeting Room List",
//   description: "Generated by create next app",
// };
export default function Meeting() {
  const [data, setData] = useState<StudySpace[]>([]);
  useEffect(() => {
    const handleFetch = async () => {
      // you can use try catch whatever
      const result = await getData();
      setData(result);
    };
    handleFetch();
    // no need to add dependency for an external function
  }, []);

  return (
    <>
      <Head>
        <title>Meeting Room List</title>
        <meta property='og:title' content='Meeting Room List' key='title' />
      </Head>
      <div className={styles.title}>List Meeting Room at City Campus</div>
      <ul className={styles.listRoom}>
        {data.map((item) => {
          return (
            <li key={item.name}>
              <table
                style={{
                  width: "100%",
                  height: "auto",
                  border: "1px solid black",
                }}
              >
                <tbody>
                  <tr>
                    <td style={{ width: "5%" }}>{item.name}</td>
                    <td style={{ width: "10%" }}>
                      <a href={item.url} target='_blank'>
                        Click here
                      </a>
                    </td>
                    <td style={{ width: "75%" }}>
                      <OptimizedImageWithFallback
                        alt={item.name}
                        fallback={"/No-Image.png"}
                        src={item.image_front ?? ""}
                      ></OptimizedImageWithFallback>
                      <OptimizedImageWithFallback
                        alt={item.name}
                        fallback={"/No-Image.png"}
                        src={item.image_overview ?? ""}
                      ></OptimizedImageWithFallback>
                    </td>
                    <td style={{ width: "10%" }}>Note</td>
                  </tr>
                </tbody>
              </table>
            </li>
          );
        })}
      </ul>
    </>
  );
}
